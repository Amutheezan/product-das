<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>hl7sparkscript</Name>
    <Script>
      CREATE TEMPORARY TABLE hl7msg USING CarbonAnalytics
       OPTIONS(tableName "das_hl7_data_publisher_store",
       incrementalParams "hl7msg, MINUTE");

       CREATE TEMPORARY TABLE hl7messagePerMinute USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perMinute",
       schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i,
       type STRING -i, subtype STRING -i, msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, day, hour, minute, type, subtype",
       incrementalParams "hl7messagePerMinute, HOUR",
       mergeSchema "false");

       CREATE TEMPORARY TABLE hl7messagePerHour USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perHour",
       schema "year INT -i, month INT -i, day INT -i, hour INT -i, type STRING -i, subtype STRING -i,
       msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, day, hour, type, subtype",
       incrementalParams "hl7messagePerHour, DAY",
       mergeSchema "false");

       CREATE TEMPORARY TABLE hl7messagePerDay USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perDay",
       schema "year INT -i, month INT -i, day INT -i, type STRING -i, subtype STRING -i,
       msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, day, type, subtype",
       incrementalParams "hl7messagePerDay, MONTH",
       mergeSchema "false");

       CREATE TEMPORARY TABLE hl7messagePerMonth USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perMonth",
       schema "year INT -i, month INT -i, type STRING -i, subtype STRING -i, msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, type, subtype",
       incrementalParams "hl7messagePerMonth, YEAR",
       mergeSchema "false");;


       CREATE TEMPORARY TABLE hl7messagePerMinuteAll USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perMinuteAll",
       schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i, type STRING -i,
       msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, day, hour,minute, type",
       mergeSchema "false");

       CREATE TEMPORARY TABLE hl7messagePerHourAll USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perHourAll",
       schema "year INT -i, month INT -i, day INT -i, hour INT -i, type STRING -i,
       msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, day, hour, type",
       mergeSchema "false");

       CREATE TEMPORARY TABLE hl7messagePerMonthAll USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perMonthAll",
       schema "year INT -i, month INT -i, type STRING -i,
       msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, type",
       mergeSchema "false");

       CREATE TEMPORARY TABLE hl7messagePerDayAll USING CarbonAnalytics
       OPTIONS (tableName "das_hl7_data_publisher_store_perDayAll",
       schema "year INT -i, month INT -i, day INT -i, type STRING -i,
       msgCount INT,timestamp LONG -i",
       primaryKeys "year, month, day, type",
       mergeSchema "false");

       INSERT INTO TABLE hl7messagePerMinute
       SELECT temp.year,temp.month,temp.day, temp.hour,
       temp.minute,temp.`_MSH.MessageType`,temp.`_MSH.MessageType[1]`,count(*) as count,
       getMinuteStartingTime(temp.year, temp.month, temp.day, temp.hour,temp.minute) as timestamp
       FROM
       (SELECT getYear(timestamp) as year,getMonth(timestamp) as month,getDay(timestamp) as day,getHour(timestamp) as
       hour,getMinute(timestamp) as minute,`_MSH.MessageType`, `_MSH.MessageType[1]`
       FROM hl7msg)temp
       Group By temp.year,temp.month,temp.day,temp.hour,temp.minute,temp.`_MSH.MessageType`,temp.`_MSH.MessageType[1]`;

       INCREMENTAL_TABLE_COMMIT hl7msg;

       INSERT INTO TABLE hl7messagePerMinuteAll
       SELECT year, month, day, hour, minute,type ,msgCount,timestamp
       FROM
       (SELECT year, month, day, hour, minute,type, sum(msgCount) as msgCount,
       getMinuteStartingTime(year, month, day, hour, minute) as timestamp
       FROM hl7messagePerMinute
       GROUP BY year, month, day, hour, minute,type) temp;

       INSERT INTO TABLE hl7messagePerHour
       SELECT year, month, day, hour, type, subtype,sum(msgCount) as msgCount,
       getHourStartingTime(year, month, day, hour) as timestamp
       FROM hl7messagePerMinute
       GROUP BY
       year, month, day, hour, type, subtype;

       INCREMENTAL_TABLE_COMMIT hl7messagePerMinute;

       INSERT INTO TABLE hl7messagePerHourAll
       SELECT year, month, day, hour, type, msgCount,timestamp
       FROM
       (SELECT year, month, day, hour,type, sum(msgCount) as msgCount,
       getHourStartingTime(year, month, day, hour) as timestamp
       FROM hl7messagePerHour
       GROUP BY year, month, day, hour,type) temp;

       INSERT INTO TABLE hl7messagePerDay
       SELECT year, month, day, type, subtype,sum(msgCount) as msgCount,
       getDateStartingTime(year, month, day) as timestamp
       FROM hl7messagePerHour
       GROUP BY
       year, month, day, type, subtype;

       INCREMENTAL_TABLE_COMMIT hl7messagePerHour;

       INSERT INTO TABLE hl7messagePerDayAll
       SELECT year, month, day,type , msgCount,timestamp
       FROM
       (SELECT year, month, day, type,sum(msgCount) as msgCount,
       getDateStartingTime(year, month, day) as timestamp
       FROM hl7messagePerDay
       GROUP BY year, month, day,type) temp;

       INSERT INTO TABLE hl7messagePerMonth
       SELECT year, month, type, subtype,sum(msgCount) as msgCount,
       getMonthStartingTime(year, month) as timestamp
       FROM hl7messagePerDay
       GROUP BY
       year, month, type, subtype;

       INCREMENTAL_TABLE_COMMIT hl7messagePerDay;

       INSERT INTO TABLE hl7messagePerMonthAll
       SELECT year, month, type, msgCount,timestamp
       FROM
       (SELECT year, month, type, sum(msgCount) as msgCount,
       getMonthStartingTime(year, month) as timestamp
       FROM hl7messagePerMonth
       GROUP BY year, month, type) temp;
    </Script>
    <CronExpression>0 * * * * ?</CronExpression>
</Analytics>
