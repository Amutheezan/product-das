<%
function isNull(value){
  var isNull=false;
  if(typeof value === "undefined" || value === null || value === "" || value === "null"){
    isNull=true;
  }
	if(typeof value == "undefined" || value == null || value == "" || value == "null"){
		isNull=true;
	}
  return isNull;
}

function getAlertLimit(executionPlan){
	var alertLimit;
	if(isNull(executionPlan) == false ){
    executionPlan=executionPlan.split(" ");
    for(var i=0;i<executionPlan.length;i++){
      if(executionPlan[i] == ">"){
        alertLimit= executionPlan[i+1];
      }
    }
	}
	return alertLimit[0];
}

function getPhoneNo(smsPublisher){
	var phoneNo;
	if(isNull(smsPublisher) == false ){
    log.info(smsPublisher);
    var regexGetPhoneNo=/<property name="sms.no">(.*?)<\/property>/g;
		phoneNo=smsPublisher.match(regexGetPhoneNo).map(function(val){
      val = val.replace('<property name="sms.no">','');
      val = val.replace('<property>','');
      val = val.replace(' ','');
      return val
    })
	}
	return phoneNo[0];
}

function getEmailAddress(emailPublisher){
	var Email;
	if(isNull(emailPublisher) == false ){
      var regexGetEmail=/<property name="email.address">(.*?)<\/property>/g;
      Email=emailPublisher.match(regexGetEmail).map(function(val){
      val = val.replace('<property name="email.address">','');
      val = val.replace('<property>','');
      val = val.replace(' ','');
        return val
      })
	}
	return Email[0];
}

function getTemplate(){
  var path = "hl7Alerts.xml";
  var file = new File(path);
  file.open("r");
  var message = "";
  message = file.readAll();
  file.close();
  return message;
}

function createExecutionPlan(AlertType){
  var ExecutionPlan,template;
  if(AlertType != "disease" && AlertType != "waitTime"){

  }else{
    template=getTemplate();
    if(AlertType == "disease"){
      var regex=/<template name="diseaseExecutionPlan">(.*?)<\/template>/g;
      var header='<template name="diseaseExecutionPlan">';
    }else if(AlertType == "waitTime"){
      template=getTemplate();
      var regex=/<template name="waitTimeExecutionPlan">(.*?)<\/template>/g;
      var header='<template name="waitTimeExecutionPlan">';
    }
  var footer="<template>"
  ExecutionPlan=getContent(regex,header,footer,template);
  log.info(ExecutionPlan + " is the executionplan");
  }
	return ExecutionPlan;
}

function createPublisher(AlertType,PublisherType){
  var publisher,template;
  if(PublisherType != "sms" && PublisherType != "email"){

  }else{
    template=getTemplate();
    if(PublisherType == "sms"){
        var regex=/<template name="smsPublisher">(.*?)<\/template>/g;
        var header='<template name="smsPublisher">';
    }else if (PublisherType == "email"){
        var regexGetPublisher=/<template name="emailPublisher">(.*?)<\/template>/g;
        var header='<template name="emailPublisher">';
    }
    var footer="<template>"
    publisher=getContent(regex,header,footer,template);
    publisher = publisher.replace('$AlertType',AlertType);
  }

	return publisher
}

function getContent(regex,header,footer,template){
    log.info(template);
    var val=regex.exec(template);
    log.info(val);
    val = val.replace(header,'');
    val = val.replace(footer,'');
    val = val.replace('<![CDATA[','');
    val = val.replace(']]>','');
    val = val.replace(' ','');
    return val
}
%>
